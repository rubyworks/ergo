#!/usr/bin/env ruby

ignore 'pages', 'doc', 'site', 'log'

# Access to project metadata.
def project
  @project ||= (
    require 'yaml'
    index = YAML.load_file('.index')
    Struct.new('Project', *index.keys).new(*index.values)
  )
end

book :default => [:index, :manifest, :demo]

book :release => [:index, :demo, :manifest, :doc]
#  # always run tests before release
#  rule true do
#    shell "qed -Ilib"
#  end
#end

# QED Demos
book :demo do
  desc "run demos"

  rule 'demo/**/*.md'        => :demo
  rule 'lib/**/*.rb'         => :demo_all
  rule 'demo/test_helper.rb' => :demo_all

  def demo(*files)
    #files = ["demo/**/*.md"] if files.empty?
    shell "bundle exec qed " + files.join(" ")
  end

  def demo_all
    demo "demo/**/*.md"
  end
end

# Unit Testing
book :test do
  desc "run unit tests"

  rule 'test/case_*.rb'         => :test
  rule 'test/helper.rb'         => :test_all
  rule /^lib\/(.*?)\.rb$/       => :test_match
  rule /^lib\/ergo\/(.*?)\.rb$/ => :test_match

  def test(*paths)
    shell "ruby-test #{gem_opt} -Ilib:test #{paths.flatten.join(' ')}"
  end

  def test_all
    test(*Dir['test/**/case_*.rb'])
  end

  def test_match(m)
    test("test/case_#{m[1]}")
  end

  def gem_opt
    defined?(::Gem) ? "-rubygems" : ""
  end
end

# Update Manifest
#
# This uses the mast commandline tool.

book :manifest do
  desc "update manifest"

  rule :manifest_outofdate? => :update_manifest

  def manifest_outofdate?
    ! system "mast --quiet --verify"
  end

  def update_manifest
    shell "mast -u"
  end
end

book :index do
  desc "update index file"

  rule 'Index.yml' do 
    shell "index -u Index.yml"
  end
end

# Shomen documentation.
book :doc do
  desc "generate shomen documentation"

  rule :shomen_docs_needed? => :update_shomen_docs

  def shomen_docs_needed?
    files = `mast -b --no-head`.split("\n")
    doc_file = "web/doc/#{project.name}-#{project.version}.json"
    ! FileUtils.uptodate?(doc_file, files)
  end

  def update_shomen_docs
    shell "shomen-yard > web/doc/#{project.name}-#{project.version}.json"
  end
end


